name: DeepSeek Orchestrator • CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      PYTHON_VERSION: "3.10"
      TF_IN_AUTOMATION: "1"
      # Flag resolves once; safe to reference later
      HAS_AWS_SECRETS: >-
        ${{ secrets.AWS_ACCESS_KEY_ID && secrets.AWS_SECRET_ACCESS_KEY &&
            secrets.AWS_REGION && 'true' || 'false' }}
      VLLM_ENDPOINT_URL: ${{ secrets.VLLM_ENDPOINT_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip

      - name: Install project deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest requests

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - run: mkdir -p pytest-results/unit pytest-results/plan pytest-results/inference
        name: Init result dirs

      # ---------------- unit tests ----------------
      - name: Run unit tests
        run: pytest tests/unit --junitxml=pytest-results/unit/results.xml

      # ---------------- static validate -----------
      - name: Terraform validate
        run: |
          cd terraform
          terraform init -input=false -no-color
          terraform validate -no-color

      # ---------------- optional AWS creds --------
      - name: Configure AWS credentials
        if: ${{ env.HAS_AWS_SECRETS == 'true' }}
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Warn if AWS secrets missing
        if: ${{ env.HAS_AWS_SECRETS != 'true' }}
        run: echo "::warning ::AWS secrets not set – skipping terraform plan."

      # ---------------- terraform plan ------------
      - name: Terraform plan
        if: ${{ env.HAS_AWS_SECRETS == 'true' }}
        run: |
          cd terraform
          terraform init  -input=false -no-color
          terraform plan  -input=false -lock=false -no-color | tee ../pytest-results/plan/plan.txt

      # ---------------- live inference ------------
      - name: Run live inference test
        if: ${{ env.VLLM_ENDPOINT_URL != '' }}
        run: pytest tests/integration/test_inference_endpoint.py --junitxml=pytest-results/inference/results.xml

      - name: Notice when no inference URL
        if: ${{ env.VLLM_ENDPOINT_URL == '' }}
        run: echo "::notice ::VLLM_ENDPOINT_URL not set – skipping live inference."

      # ---------------- upload artifacts ----------
      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: pytest-results/**
