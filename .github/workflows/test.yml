name: DeepSeek Orchestrator â€¢ CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      PYTHON_VERSION: "3.10"
      TF_IN_AUTOMATION: "1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Initialize test output folders
        run: mkdir -p pytest-results/unit pytest-results/plan pytest-results/inference

      - name: Run unit tests
        run: pytest tests/unit --junitxml=pytest-results/unit/results.xml
        env:
          PYTHONWARNINGS: "ignore::UserWarning"

      - name: Run terraform plan test
        run: pytest tests/integration/test_terraform_plan.py --junitxml=pytest-results/plan/results.xml

      - name: Run live inference integration
        if: env.VLLM_ENDPOINT_URL != ''
        run: pytest tests/integration/test_inference_endpoint.py --junitxml=pytest-results/inference/results.xml

      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: pytest-results/**/results.xml
