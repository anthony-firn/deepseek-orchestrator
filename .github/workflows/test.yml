name: DeepSeek Orchestrator • CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:       # manual trigger
  schedule:
    - cron: "0 3 * * *"    # nightly @ 03:00 UTC (integration/full run)

jobs:
  tests:
    runs-on: ubuntu-latest        # <= swap to self-hosted GPU runner if needed
    timeout-minutes: 30

    env:
      PYTHON_VERSION: "3.10"
      # Leave unset unless you spin up vLLM in this job / use self‑hosted runner
      # VLLM_ENDPOINT_URL: http://localhost:8000
      TF_IN_AUTOMATION: "1"       # suppress interactive prompts

    steps:
    # ------------------------------------------------------------
    # 1) Checkout code
    # ------------------------------------------------------------
    - name: Checkout repository
      uses: actions/checkout@v4

    # ------------------------------------------------------------
    # 2) Set up Python
    # ------------------------------------------------------------
    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: "pip"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest requests
        # minimal deps for import checks; add vllm etc. if you use a GPU runner
        echo "Installed deps."

    # ------------------------------------------------------------
    # 3) Install Terraform (for integration plan test)
    # ------------------------------------------------------------
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.6

    # ------------------------------------------------------------
    # 4) Run *unit* tests
    # ------------------------------------------------------------
    - name: Run unit tests
      run: pytest tests/unit
      env:
        PYTHONWARNINGS: "ignore::UserWarning"

    # ------------------------------------------------------------
    # 5) Conditionally run *integration* tests
    # ------------------------------------------------------------
    - name: Run integration tests (plan only, no AWS creds needed)
      run: pytest tests/integration/test_terraform_plan.py

    - name: Run live inference integration (optional)
      if: env.VLLM_ENDPOINT_URL != ''
      run: pytest tests/integration/test_inference_endpoint.py

    # ------------------------------------------------------------
    # 6) Upload pytest results (optional)
    # ------------------------------------------------------------
    - name: Publish test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pytest-logs
        path: |
          .pytest_cache
          tests/**/pytest*.xml
