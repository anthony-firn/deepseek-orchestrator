name: DeepSeek Orchestrator • CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"

jobs:
  ##############################################
  # Unit‑tests & Terraform validate (no AWS)
  ##############################################
  core-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      PYTHON_VERSION: "3.10"
      TF_IN_AUTOMATION: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip

      - name: Install Python deps
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Init results folders
        run: mkdir -p pytest-results/unit pytest-results/validate pytest-results/inference

      # -------- Unit tests --------
      - name: Run unit tests
        run: pytest tests/unit --junitxml=pytest-results/unit/results.xml

      # -------- Terraform validate (static, no AWS) --------
      - name: Terraform validate
        run: |
          set -e
          cd terraform
          terraform init -input=false -no-color
          terraform validate -no-color

      - name: Publish core results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-core
          path: pytest-results/unit/results.xml

  ##############################################
  # Terraform plan (needs AWS creds)
  ##############################################
  terraform-plan:
    needs: core-tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: ${{ secrets.AWS_ACCESS_KEY_ID && secrets.AWS_SECRET_ACCESS_KEY && secrets.AWS_REGION }}

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Terraform init & plan
        run: |
          set -e
          cd terraform
          terraform init -input=false -no-color
          terraform plan -input=false -lock=false -no-color | tee ../pytest-results/validate/plan.txt

      - name: Upload Terraform plan output
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: pytest-results/validate/plan.txt

  ##############################################
  # Live inference integration (optional URL)
  ##############################################
  live-inference:
    needs: core-tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ env.VLLM_ENDPOINT_URL != '' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip

      - name: Install pytest & requests
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests

      - name: Run live inference test
        run: pytest tests/integration/test_inference_endpoint.py --junitxml=pytest-results/inference/results.xml

      - name: Upload inference results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-inference
          path: pytest-results/inference/results.xml
